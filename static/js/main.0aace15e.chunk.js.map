{"version":3,"sources":["ListItems.js","App.js","reportWebVitals.js","index.js"],"names":["ListItems","props","listItems","items","map","item","i","console","log","draggableId","key","index","provided","className","ref","innerRef","draggableProps","dragHandleProps","type","id","checked","isChecked","onChange","e","handleCheckboxChange","value","text","setUpdate","target","icon","onClick","deleteItem","onDragEnd","droppableId","droppableProps","placeholder","library","add","faTrash","App","result","srcI","source","desI","destination","state","length","k","push","undefined","splice","JSON","stringify","setState","currentItem","handleInput","bind","addItem","this","Date","now","preventDefault","newItem","newItems","filteredItems","filter","onSubmit","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0aace15e.chunk.js","sourcesContent":["import React from'react';\nimport './ListItems.css';\nimport { FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {DragDropContext, Draggable, Droppable} from 'react-beautiful-dnd';\n\n\nfunction ListItems(props){\n    const items =props.items;\n    const listItems=items.map((item, i) =>\n        {\n            console.log(item);\n            return (<Draggable draggableId = {\"draggable-\"+item.key} index = {i}>\n                {(provided) => (\n                    <div className=\"list\" key={item.key} ref = {provided.innerRef}\n                    {...provided.draggableProps} {...provided.dragHandleProps} index = {i}>\n                    <p>\n                    <input type=\"checkbox\" \n                        id = {item.key}\n                        checked = {!item.isChecked}\n                        onChange = {\n                            (e) => {\n                                props.handleCheckboxChange(!item.isChecked,item.key)\n                            }\n                        }\n                    />\n                    <input type=\"text\" \n                    id={item.key} \n                    value={item.text}\n                    onChange ={\n                        (e) =>{\n                            props.setUpdate(e.target.value, item.key)\n                        }\n                    }/>\n                <span>\n                    <FontAwesomeIcon className=\"faicons\"\n                    icon='trash'\n                    onClick={ () => props.deleteItem(item.key)\n                    }/>\n                </span>\n                </p>\n        \n            </div>\n                )}\n            </Draggable>)\n        })\n        return(\n            <DragDropContext onDragEnd = {props.onDragEnd}>\n                <Droppable droppableId = \"droppable-1\">\n                    {(provided) => (\n                        <div ref = {provided.innerRef} {...provided.droppableProps}>\n                            {listItems}\n                            {provided.placeholder}\n                        </div>\n                    )}\n                </Droppable>\n            </DragDropContext>\n        )\n}\nexport default ListItems;","import React from 'react';\n\nimport './App.css';\nimport ListItems from './ListItems';\nimport{library} from '@fortawesome/fontawesome-svg-core';\nimport{faTrash} from '@fortawesome/free-solid-svg-icons';\n\n\nlibrary.add(faTrash);\n\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state={\n      items:[],\n      currentItem:{\n        text:'',\n        key:'',\n        isChecked: true\n      }\n    }\n    this.handleInput=this.handleInput.bind(this);\n    this.addItem=this.addItem.bind(this);\n    this.handleCheckboxChange = this.handleCheckboxChange.bind(this);\n    this.deleteItem=this.deleteItem.bind(this);\n    this.setUpdate=this.setUpdate.bind(this);\n    // this.onDragEnd=this.onDragEnd.bind(this);\n    \n  }\n  handleInput(e){\n    this.setState({\n      currentItem:{\n        text:e.target.value,\n        key:Date.now(),\n        isChecked : true\n      }\n      })\n  }\n  addItem(e){\n    e.preventDefault();\n    const newItem=this.state.currentItem;\n    if(newItem.text!==\"\"){\n      console.log(newItem)\n      const newItems=[...this.state.items,newItem];\n      this.setState({\n        items:newItems,\n        currentItem:{\n          text:'',\n          key:' ',\n          isChecked : true\n        }\n      }\n      )\n    }\n  }\n  deleteItem(key){\n    const filteredItems =this.state.items.filter(item =>\n      item.key!==key);\n      this.setState({\n        items:filteredItems\n      })\n  }\n  setUpdate(text,key)\n  {\n    const items=this.state.items;\n    items.map(item =>{\n      if(item.key===key){\n        item.text=text;\n      }\n    })\n    this.setState({\n      items:items\n    })\n  }\n\n  handleCheckboxChange(checked, key) {\n    const items=this.state.items;\n    items.map(item =>{\n      if(item.key===key){\n        item.isChecked=checked;\n      }\n    })\n    this.setState({\n      items:items\n    })\n  }\n\n  onDragEnd = (result) => {\n    console.log(result);\n    const srcI=result.source.index;\n    const desI=result.destination?.index;\n    if(!desI){\n      return;\n    }\n    const items = this.state.items;\n    if (desI >= items.length) {\n      var k = desI - items.length + 1;\n      while (k--) {\n          items.push(undefined);\n      }\n    }\n  items.splice(desI, 0, items.splice(srcI, 1)[0]);\n    console.log(\"End - \"+JSON.stringify(items));\n    this.setState({\n      items:items\n    })\n  }\n\n  render(){\n    return(\n        <div className=\"App\">\n        <header>\n          <form id=\"to-do-form\" onSubmit={this.addItem}>\n            <input type=\"text\" placeholder=\"Enter Text\"\n            value={this.state.currentItem.text}\n            onChange={this.handleInput}/>\n            <button type=\"submit\">Add</button>\n            </form>\n        </header>\n        <ListItems items={this.state.items}\n        deleteItem={this.deleteItem}\n        setUpdate ={this.setUpdate}\n        handleCheckboxChange = {this.handleCheckboxChange}\n        onDragEnd = {this.onDragEnd}>\n        </ListItems>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n"," import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}